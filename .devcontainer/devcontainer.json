// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/dotnet
{
	"name": "DWD UI Modernization",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Update 'VARIANT' to pick a .NET Core version: 3.1, 5.0, 6.0
			// Append -bullseye or -focal to pin to an OS version.
			"VARIANT": "6.0",
			// Options
			"NODE_VERSION": "16"
		}
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"git-graph.repository.commits.showSignatureStatus": true,
		"git-graph.repository.sign.commits": true,
		"git-graph.repository.sign.tags": true,
		"git.alwaysSignOff": true,
		"git.enableCommitSigning": true,
		"editor.rulers": [
			80,
			110
		],
		"[javascript]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode"
		},
		"git.confirmSync": false,
		"redhat.telemetry.enabled": false,
		"codeQL.telemetry.enableTelemetry": false,
		"terminal.integrated.defaultProfile.linux": "zsh",
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		// -----------
		// -- Tools --
		// -----------
		// github pull requests and issues
		"github.vscode-pull-request-github",
		// csharp
		"ms-dotnettools.csharp",
		// google cloud extension
		"GoogleCloudTools.cloudcode",
		// draw io diagramming
		"hediet.vscode-drawio",
		// git history viewer
		"mhutchie.git-graph",
		// REST api client
		"rangav.vscode-thunder-client",
		// live share for mobbing
		"vsliveshare.vsliveshare",
		// Kubernetes interfaces
		"ms-kubernetes-tools.vscode-kubernetes-tools",
		// --------------------------------
		// -- Viewers, Editors, and Linters
		// --------------------------------
		// Docker linter
		"exiasr.hadolint",
		// terraform
		"hashicorp.terraform",
		// javascript prettier
		"esbenp.prettier-vscode",
		// Yaml syntax
		"redhat.vscode-yaml",
		// check spelling in code comments, vars, etc
		"streetsidesoftware.code-spell-checker",
		// View trailing spaces in editor
		"shardulm94.trailing-spaces",
		// View vulnerabilities found by trivy
		"aquasecurityofficial.trivy-vulnerability-scanner",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],

	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-in-docker": "20.10",
		"ghcr.io/devcontainers/features/terraform:1": {
			"version": "1.3.6"
		}
	}
}